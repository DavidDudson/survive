name: CI
on: [pull_request]

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Setup | Checkout
        uses: actions/checkout@v3
      - uses: awalsh128/cache-apt-pkgs-action@latest
        with:
          packages: libasound2-dev libudev-dev pkg-config
      - name: Setup | Toolchain (clippy)
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          default: true
          components: clippy, rustfmt
      - uses: Swatinem/rust-cache@v2
      - name: Lint | Clippy
        uses: giraffate/clippy-action@v1
        with:
          reporter: 'github-pr-review'
          github_token: ${{ secrets.GITHUB_TOKEN }}
      - name: Lint | Rustfmt
        run: cargo fmt -- --check

  build:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        target: [ wasm32-unknown-unknown ]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Setup | Checkout
        uses: actions/checkout@v3

      - name: Setup | Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          profile: minimal
          target: ${{ matrix.target }}
      - uses: Swatinem/rust-cache@v2
      - uses: awalsh128/cache-apt-pkgs-action@latest
        with:
          packages: libasound2-dev libudev-dev pkg-config
      - name: Build
        run: cargo build

  test:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Setup | Checkout
        uses: actions/checkout@v3
      - name: Setup | Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          profile: minimal
      - uses: awalsh128/cache-apt-pkgs-action@latest
        with:
          packages: libasound2-dev libudev-dev pkg-config
      - uses: Swatinem/rust-cache@v2
      - name: Test
        run: cargo test